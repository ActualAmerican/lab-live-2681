// ============================================================================
// Shape: PuzzlePiece  |  src/shapes/PuzzlePiece.js
// ----------------------------------------------------------------------------
// Blueprint Sections
//   0. Utility Functions
//   1. Initialization
//   2. Intro Animation Helpers & State
//   3. Drawing Functions
//   4. Gameplay Logic (placeholder)
//   5. Scoring & Feedback (placeholder)
//   6. Skins & Effects (stub)
//   7. Debugging Tools (stub)
//   8. Structural Requirements
// ============================================================================

import { Shape } from './Shape.js';

// ---------------------------------------------------------------------------
// 0. Utility Functions
// ---------------------------------------------------------------------------
function smoothstep(t) {
  return t * t * (3 - 2 * t);
}

// ---------------------------------------------------------------------------
// 1. Initialization
// ---------------------------------------------------------------------------
export class PuzzlePiece extends Shape {
  constructor(x, y, size, _ignoredColor, name = 'PuzzlePiece') {
    super(x, y, size * 0.9, '#ffbb00ff'); // amber
    this.name = name;

    this._drawScale = 4;
    this._vbSize = 655.35999;
    this._halfVB = this._vbSize / 2;

    this.playIntro = true;
    this.introTimer = 0;
    this.fadeInTime = 1000;
    this.introDuration = 2400;
    this.glintDuration = 600;
    this.sequenceDone = false;
    this.objectiveCompleted = false;
    this.spinDegrees = 360;
    this.spinSpeedMultiplier = 2.2;
    this.spinDuration = this.introDuration / this.spinSpeedMultiplier;
    this.glintStart = this.spinDuration;
    this.vanishStart = this.glintStart + this.glintDuration;
    this.vanishDuration = 400;
    this.isReadyToPlay = false;


    this._path = new Path2D(`M 218.4,481.68742 c -0.528,-0.0752 -1.0968,-0.2696 -1.264,-0.43205 -0.1672,-0.16246 -1.40957,-0.29538 -2.76082,-0.29538 -1.79346,0 -2.56438,-0.12961 -2.85518,-0.48 -0.24388,-0.29385 -0.94552,-0.48 -1.80923,-0.48 -0.9589,0 -1.46987,-0.15377 -1.59505,-0.48 -0.11178,-0.29128 -0.59568,-0.48 -1.23078,-0.48 -0.57562,0 -1.22584,-0.216 -1.44494,-0.48 -0.21911,-0.264 -0.74526,-0.48 -1.16923,-0.48 -0.42397,0 -0.85375,-0.216 -0.95505,-0.48 -0.10131,-0.264 -0.51116,-0.48 -0.91078,-0.48 -0.39962,0 -0.90584,-0.216 -1.12494,-0.48 -0.21911,-0.264 -0.66874,-0.48 -0.99919,-0.48 -0.33045,0 -0.60081,-0.13256 -0.60081,-0.29457 0,-0.16202 -0.432,-0.38946 -0.96,-0.50543 -0.528,-0.11597 -0.96,-0.33371 -0.96,-0.48386 0,-0.15016 -0.31294,-0.37234 -0.69542,-0.49373 -0.66289,-0.21039 -1.0048,-0.43842 -2.01283,-1.34241 -0.24532,-0.22 -0.56823,-0.4 -0.71758,-0.4 -0.14935,0 -0.74452,-0.432 -1.32261,-0.96 -0.57808,-0.528 -1.18618,-0.96 -1.35131,-0.96 -0.16514,0 -0.30025,-0.216 -0.30025,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.216,-0.48 -0.48,-0.48 -0.264,0 -0.48,-0.216 -0.48,-0.48 0,-0.264 -0.1343,-0.48 -0.29844,-0.48 -0.16414,0 -0.38152,-0.252 -0.48307,-0.56 -0.10155,-0.308 -0.61526,-1.04751 -1.14157,-1.64336 -0.52631,-0.59585 -0.95692,-1.21746 -0.95692,-1.38135 0,-0.1639 -0.34329,-0.75638 -0.76286,-1.31664 -0.41958,-0.56026 -0.86128,-1.34265 -0.98157,-1.73865 -0.12028,-0.396 -0.353,-0.72 -0.51714,-0.72 -0.16414,0 -0.29843,-0.432 -0.29843,-0.96 0,-0.64 -0.16,-0.96 -0.48,-0.96 -0.31606,0 -0.48,-0.3162 -0.48,-0.92576 0,-0.52771 -0.20639,-1.00497 -0.48,-1.10996 -0.29736,-0.11411 -0.48,-0.60115 -0.48,-1.28 0,-0.67885 -0.18264,-1.16589 -0.48,-1.28 -0.29678,-0.11388 -0.48,-0.6006 -0.48,-1.27505 0,-0.59998 -0.216,-1.27013 -0.48,-1.48923 -0.2865,-0.23777 -0.48,-0.93728 -0.48,-1.73518 0,-0.73525 -0.18,-1.51627 -0.4,-1.73559 -0.26574,-0.26492 -0.47151,-2.08552 -0.61304,-5.424 -0.11717,-2.76388 -0.35824,-6.75323 -0.53573,-8.86523 -0.43912,-5.22547 -0.43889,-195.61928 2.5e-4,-201.12 0.17563,-2.2 0.4159,-6.26135 0.53393,-9.02522 0.14247,-3.33653 0.349,-5.15924 0.61459,-5.424 0.22,-0.21933 0.4,-1.00769 0.4,-1.75192 0,-0.77612 0.20468,-1.55783 0.48,-1.83314 0.264,-0.264 0.48,-0.912 0.48,-1.44 0,-0.528 0.216,-1.176 0.48,-1.44 0.264,-0.264 0.48,-0.85481 0.48,-1.3129 0,-0.4581 0.216,-0.91579 0.48,-1.01709 0.264,-0.10131 0.48,-0.51116 0.48,-0.91078 0,-0.39962 0.216,-0.90584 0.48,-1.12494 0.264,-0.21911 0.48,-0.58507 0.48,-0.81325 0,-0.42991 0.97054,-2.42462 1.31687,-2.70651 0.10827,-0.0881 0.29288,-0.46819 0.41024,-0.84457 0.11735,-0.37637 0.55758,-1.05573 0.97829,-1.50968 0.42071,-0.45395 0.8578,-1.11801 0.97132,-1.47568 0.11352,-0.35767 0.3407,-0.65031 0.50484,-0.65031 0.16414,0 0.29844,-0.14886 0.29844,-0.33079 0,-0.18193 0.432,-0.75308 0.96,-1.26921 0.528,-0.51614 0.96,-1.03024 0.96,-1.14244 0,-0.29706 4.69634,-4.90453 6.51204,-6.38881 0.85363,-0.69782 1.84766,-1.52075 2.20897,-1.82875 0.3613,-0.308 0.83547,-0.56 1.05371,-0.56 0.21824,0 0.47969,-0.216 0.581,-0.48 0.1013,-0.264 0.40471,-0.48 0.67423,-0.48 0.26953,0 0.49005,-0.12839 0.49005,-0.28531 0,-0.15692 0.36,-0.37567 0.8,-0.4861 0.44,-0.11043 0.8,-0.34204 0.8,-0.51469 0,-0.17265 0.27771,-0.3139 0.61714,-0.3139 0.33943,0 0.83314,-0.216 1.09714,-0.48 0.264,-0.264 0.78281,-0.48 1.1529,-0.48 0.3701,0 0.75579,-0.216 0.8571,-0.48 0.10273,-0.26774 0.57844,-0.48 1.07572,-0.48 0.49727,0 0.97298,-0.21227 1.07572,-0.48 0.1141,-0.29736 0.60114,-0.48 1.28,-0.48 0.67885,0 1.16589,-0.18264 1.28,-0.48 0.11656,-0.30377 0.60749,-0.48 1.33709,-0.48 0.63409,0 1.3689,-0.216 1.6329,-0.48 0.30426,-0.30427 1.09257,-0.48 2.15314,-0.48 0.92023,0 1.85294,-0.18 2.07269,-0.4 0.4297,-0.43019 10.08647,-0.64061 48.3456,-1.05345 l 19.65714,-0.21211 1.68439,-1.27172 c 6.88866,-5.201 8.938,-14.77907 5.54109,-25.89769 -1.07525,-3.51945 -3.71,-8.90019 -5.6298,-11.49729 -3.24994,-4.39652 -6.22458,-10.62497 -7.71198,-16.14774 -0.81803,-3.0374 -0.86183,-3.57398 -0.86183,-10.56 0,-7.01171 0.0415,-7.51507 0.87673,-10.636937 4.79289,-17.914462 18.71605,-30.855758 38.47054,-35.757581 6.81508,-1.691076 18.62875,-1.762358 25.43657,-0.153479 15.87007,3.750539 28.18306,12.856722 35.21292,26.042033 3.86037,7.240555 5.5234,15.768134 4.78123,24.516844 -0.66101,7.792 -3.14391,14.53578 -8.02368,21.79304 -3.61698,5.37922 -6.06354,11.03818 -7.20266,16.65996 -0.78148,3.85679 -0.4914,10.19074 0.60865,13.29007 1.27682,3.59735 3.26926,6.24151 6.85208,9.09339 0.59224,0.47142 2.74479,0.54983 20.29698,0.73933 38.24527,0.41293 47.89333,0.62323 48.32293,1.05333 0.21975,0.22 1.15246,0.4 2.07269,0.4 1.06057,0 1.84888,0.17573 2.15315,0.48 0.264,0.264 0.9988,0.48 1.6329,0.48 0.7296,0 1.22052,0.17623 1.33709,0.48 0.11411,0.29736 0.60115,0.48 1.28,0.48 0.67885,0 1.16589,0.18264 1.28,0.48 0.10274,0.26773 0.57845,0.48 1.07572,0.48 0.49727,0 0.97298,0.21226 1.07572,0.48 0.10131,0.264 0.54871,0.48 0.99424,0.48 0.44552,0 0.81004,0.14125 0.81004,0.3139 0,0.17265 0.39457,0.41293 0.87683,0.53397 0.48226,0.12104 1.06854,0.41179 1.30286,0.6461 0.23431,0.23431 0.63174,0.42603 0.88317,0.42603 0.25143,0 0.45714,0.144 0.45714,0.32 0,0.176 0.22052,0.32 0.49004,0.32 0.26953,0 0.57293,0.216 0.67424,0.48 0.10131,0.264 0.36275,0.48 0.58099,0.48 0.21824,0 0.69242,0.252 1.05372,0.56 0.3613,0.308 1.35533,1.13093 2.20896,1.82875 1.8157,1.48428 6.51205,6.09175 6.51205,6.38881 0,0.1122 0.432,0.6263 0.96,1.14244 0.528,0.51613 0.96,1.08728 0.96,1.26921 0,0.18193 0.1343,0.33079 0.29844,0.33079 0.16414,0 0.39131,0.29264 0.50483,0.65031 0.11352,0.35767 0.55062,1.02173 0.97133,1.47568 0.4207,0.45395 0.86094,1.13331 0.97829,1.50968 0.11735,0.37638 0.30196,0.75643 0.41024,0.84457 0.34633,0.28189 1.31687,2.2766 1.31687,2.70651 0,0.22818 0.216,0.59414 0.48,0.81325 0.264,0.2191 0.48,0.72532 0.48,1.12494 0,0.39962 0.216,0.80947 0.48,0.91078 0.264,0.1013 0.48,0.55899 0.48,1.01709 0,0.45809 0.216,1.0489 0.48,1.3129 0.264,0.264 0.48,0.912 0.48,1.44 0,0.528 0.216,1.176 0.48,1.44 0.27531,0.27531 0.48,1.05702 0.48,1.83314 0,0.74423 0.18,1.53259 0.4,1.75192 0.26558,0.26476 0.47211,2.08747 0.61459,5.424 0.11803,2.76387 0.35829,6.82522 0.53392,9.02522 0.17564,2.2 0.33107,15.50071 0.34541,29.55713 l 0.0261,25.55713 1.11738,1.52218 c 4.93361,6.72092 14.77706,8.79027 25.79758,5.42333 3.51945,-1.07525 8.90019,-3.71 11.4973,-5.6298 4.39652,-3.24994 10.62496,-6.22458 16.14774,-7.71198 3.0374,-0.81803 3.57398,-0.86183 10.56,-0.86183 7.0117,0 7.51507,0.0415 10.63693,0.87673 17.91446,4.79289 30.85576,18.71605 35.75758,38.47054 1.69108,6.81508 1.76236,18.62875 0.15348,25.43657 -3.75054,15.87007 -12.85672,28.18306 -26.04203,35.21292 -7.24056,3.86037 -15.76814,5.5234 -24.51684,4.78123 -7.79201,-0.66101 -14.53579,-3.14391 -21.79304,-8.02368 -5.37922,-3.61698 -11.03818,-6.06354 -16.65997,-7.20266 -3.82917,-0.77588 -10.1928,-0.4909 -13.24442,0.59313 -3.55465,1.26272 -6.52089,3.39984 -8.50413,6.12707 l -0.90756,1.24802 -0.0243,25.95198 c -0.0135,14.4537 -0.16724,27.65334 -0.34697,29.79199 -0.17748,2.112 -0.41856,6.10135 -0.53573,8.86523 -0.14152,3.33848 -0.34729,5.15908 -0.61303,5.424 -0.22,0.21932 -0.4,1.00034 -0.4,1.73559 0,0.7979 -0.19351,1.49741 -0.48,1.73518 -0.264,0.2191 -0.48,0.88925 -0.48,1.48923 0,0.67445 -0.18323,1.16117 -0.48,1.27505 -0.29736,0.11411 -0.48,0.60115 -0.48,1.28 0,0.67885 -0.18264,1.16589 -0.48,1.28 -0.27361,0.10499 -0.48,0.58225 -0.48,1.10996 0,0.60956 -0.16395,0.92576 -0.48,0.92576 -0.32,0 -0.48,0.32 -0.48,0.96 0,0.528 -0.1343,0.96 -0.29844,0.96 -0.16414,0 -0.39685,0.324 -0.51714,0.72 -0.12029,0.396 -0.56199,1.17839 -0.98156,1.73865 -0.41957,0.56026 -0.76286,1.15274 -0.76286,1.31664 0,0.16389 -0.43062,0.7855 -0.95693,1.38135 -0.52631,0.59585 -1.04001,1.33536 -1.14156,1.64336 -0.10155,0.308 -0.31893,0.56 -0.48307,0.56 -0.16414,0 -0.29844,0.216 -0.29844,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.216,0.48 -0.48,0.48 -0.264,0 -0.48,0.216 -0.48,0.48 0,0.264 -0.13511,0.48 -0.30025,0.48 -0.16514,0 -0.77323,0.432 -1.35132,0.96 -0.57808,0.528 -1.17326,0.96 -1.3226,0.96 -0.14935,0 -0.47226,0.18 -0.71758,0.4 -1.00804,0.90399 -1.34995,1.13202 -2.01283,1.34241 -0.38248,0.12139 -0.69542,0.34357 -0.69542,0.49373 0,0.15015 -0.432,0.36789 -0.96,0.48386 -0.528,0.11597 -0.96,0.34341 -0.96,0.50543 0,0.16201 -0.27037,0.29457 -0.60082,0.29457 -0.33045,0 -0.78008,0.216 -0.99918,0.48 -0.2191,0.264 -0.72533,0.48 -1.12495,0.48 -0.39962,0 -0.80946,0.216 -0.91077,0.48 -0.10131,0.264 -0.53108,0.48 -0.95505,0.48 -0.42398,0 -0.95013,0.216 -1.16923,0.48 -0.2191,0.264 -0.86933,0.48 -1.44495,0.48 -0.63509,0 -1.119,0.18872 -1.23077,0.48 -0.12519,0.32623 -0.63615,0.48 -1.59505,0.48 -0.86372,0 -1.56536,0.18615 -1.80923,0.48 -0.2908,0.35039 -1.06173,0.48 -2.85518,0.48 -1.53885,0 -2.60623,0.14946 -2.8567,0.4 -0.3128,0.3129 -6.82359,0.41953 -29.89925,0.48968 l -29.49936,0.0897 -2.01814,-1.02435 c -6.54146,-3.32027 -12.23137,-12.6454 -12.23137,-20.04585 0,-5.99035 3.25208,-15.5835 7.02041,-20.70916 5.11071,-6.95156 7.99696,-14.48614 8.67699,-22.65137 0.9395,-11.28088 -1.54791,-20.82487 -7.81582,-29.98863 -1.88639,-2.75791 -7.7074,-8.75692 -10.76158,-11.09064 -8.1019,-6.19072 -18.03707,-9.90544 -28.71909,-10.73794 -11.00508,-0.85768 -20.79399,0.85138 -30.13083,5.26059 -2.35857,1.11382 -6.23987,3.39782 -7.49153,4.4085 -0.2082,0.16812 -1.48182,1.17423 -2.83027,2.23581 -4.04171,3.18186 -9.0215,8.9395 -11.48907,13.28368 -2.65084,4.66681 -4.71456,10.36695 -5.44521,15.04 -0.49495,3.16558 -0.49426,12.07653 0.001,14.88 1.09791,6.21291 3.59932,12.1605 7.64625,18.1804 2.64475,3.93413 2.95459,4.4481 4.08695,6.7796 1.9699,4.05596 3.33817,8.88076 3.81334,13.44664 0.24969,2.39927 -0.53118,6.27946 -1.94461,9.66277 -2.06153,4.93468 -6.41566,9.97094 -10.39458,12.02303 l -1.99239,1.02756 -28.67505,-0.0479 C 232.26377,481.84567 218.928,481.76259 218.4,481.68742 Z`);
  }

  // ---------------------------------------------------------------------------
  // 2. Intro Animation Helpers & State
  // ---------------------------------------------------------------------------
  update(dt) {
    if (!this.playIntro) return;
    this.introTimer += dt;

    if (this.introTimer >= this.vanishStart + this.vanishDuration) {
  this.playIntro = false;
  this.isReadyToPlay = true;
  this.sequenceCompleted = false;
}

  }

  // ---------------------------------------------------------------------------
  // 3. Drawing Functions
  // ---------------------------------------------------------------------------
  draw(ctx) {
    if (!this.playIntro) return;

    ctx.save();

    // Fade in
    let alpha = Math.min(1, this.introTimer / this.fadeInTime);

    // Vanish fade out
    if (this.introTimer >= this.vanishStart) {
      const vanishT = (this.introTimer - this.vanishStart) / this.vanishDuration;
      alpha *= 1 - smoothstep(Math.min(vanishT, 1));
    }

    ctx.globalAlpha = alpha;
    ctx.translate(this.x, this.y);

    // Rotation during spin
    let rotation = 0;
    if (this.introTimer < this.spinDuration) {
      const t = Math.min(1, this.introTimer / this.spinDuration);
      rotation = (this.spinDegrees * Math.PI / 180) * smoothstep(t);
    }
    ctx.rotate(rotation);

    // Scale and center
    const scale = (this.size * this._drawScale) / this._vbSize;
    ctx.scale(scale, scale);
    ctx.translate(-this._halfVB, -this._halfVB);

    // Draw base shape
    ctx.fillStyle = this.color;
    ctx.fill(this._path);

    // Glint
    const glintT = this.introTimer - this.glintStart;
    if (glintT >= 0 && glintT <= this.glintDuration) {
      const g = glintT / this.glintDuration;
      const glintX = this._vbSize * (0.1 + 0.8 * g);
      const grad = ctx.createLinearGradient(glintX - 60, 0, glintX + 60, 0);
      grad.addColorStop(0, 'rgba(255,255,255,0)');
      grad.addColorStop(0.5, 'rgba(255,255,255,0.6)');
      grad.addColorStop(1, 'rgba(255,255,255,0)');
      ctx.fillStyle = grad;
      ctx.fill(this._path);
    }

    ctx.restore();
  }

  // ---------------------------------------------------------------------------
  // 4. Gameplay Logic (placeholder)
  // ---------------------------------------------------------------------------
  handleClick() { return false; }
  checkBoundary() { return false; }
  isSequenceCompleted() { return false; }

  // ---------------------------------------------------------------------------
  // 5. Scoring & Feedback (placeholder)
  // ---------------------------------------------------------------------------
  onScoreUpdate(score) {}

  // ---------------------------------------------------------------------------
  // 6. Skins & Effects (stub)
  // ---------------------------------------------------------------------------
  applySkin(skin) {}

  // ---------------------------------------------------------------------------
  // 7. Debugging Tools (stub)
  // ---------------------------------------------------------------------------
  debugDraw(ctx) {}

  reset() {
  this.playIntro = true;
  this.introTimer = 0;
  this.isReadyToPlay = false;
  this.sequenceCompleted = false;
}

// ---------------------------------------------------------------------------
// 8. Structural Requirements
// ---------------------------------------------------------------------------
get behaviorType() {
  return 'objective';
}

isReady() {
  return !this.playIntro;
}
resetSequence(level) {
  this.reset();
}

}
